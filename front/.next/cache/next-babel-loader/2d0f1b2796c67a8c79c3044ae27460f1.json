{"ast":null,"code":"import { all, fork, put, call, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_LABELLIST_REQUEST, LOAD_LABELLIST_SUCCESS, LOAD_LABELLIST_FAILURE, POST_LABELLIST_REQUEST, POST_LABELLIST_SUCCESS } from '../reducers/label';\n\nfunction loadLabelListAPI() {\n  return axios.get('/label/list');\n}\n\nfunction* loadLabelList() {\n  try {\n    const result = yield call(loadLabelListAPI);\n    yield console.log(result);\n    yield put({\n      type: LOAD_LABELLIST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOAD_LABELLIST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadLabelList() {\n  yield takeLatest(LOAD_LABELLIST_REQUEST, loadLabelList);\n}\n\nfunction postLabelListAPI(label) {\n  return axios.post('/label/list', {\n    label\n  });\n}\n\nfunction* postLabelList(action) {\n  try {\n    const result = yield call(postLabelListAPI, action.data);\n    yield console.log(result);\n    yield put({\n      type: POST_LABELLIST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: POST_LABELLIST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchPostLabelList() {\n  yield takeLatest(POST_LABELLIST_REQUEST, postLabelList);\n}\n\nexport default function* labelSaga() {\n  yield all([fork(watchLoadLabelList), fork(watchPostLabelList)]);\n}","map":{"version":3,"sources":["D:\\webdev\\-app_page\\front\\sagas\\label.js"],"names":["all","fork","put","call","takeLatest","axios","LOAD_LABELLIST_REQUEST","LOAD_LABELLIST_SUCCESS","LOAD_LABELLIST_FAILURE","POST_LABELLIST_REQUEST","POST_LABELLIST_SUCCESS","loadLabelListAPI","get","loadLabelList","result","console","log","type","data","e","error","watchLoadLabelList","postLabelListAPI","label","post","postLabelList","action","POST_LABELLIST_FAILURE","watchPostLabelList","labelSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,EAAyDC,sBAAzD,EAAiFC,sBAAjF,EAAyGC,sBAAzG,QAAuI,mBAAvI;;AAEA,SAASC,gBAAT,GAA4B;AACxB,SAAON,KAAK,CAACO,GAAN,CAAU,aAAV,CAAP;AACH;;AAED,UAAUC,aAAV,GAA0B;AACtB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMX,IAAI,CAACQ,gBAAD,CAAzB;AACA,UAAMI,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAN;AACA,UAAMZ,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEV,sBADA;AAENW,MAAAA,IAAI,EAAEJ,MAAM,CAACI;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOC,CAAP,EAAU;AACRJ,IAAAA,OAAO,CAACK,KAAR,CAAcD,CAAd;AACA,UAAMjB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAET,sBADA;AAENY,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUE,kBAAV,GAA+B;AAC3B,QAAMjB,UAAU,CAACE,sBAAD,EAAyBO,aAAzB,CAAhB;AACH;;AAED,SAASS,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B,SAAOlB,KAAK,CAACmB,IAAN,CAAW,aAAX,EAA0B;AAAED,IAAAA;AAAF,GAA1B,CAAP;AACH;;AAED,UAAUE,aAAV,CAAwBC,MAAxB,EAAgC;AAC5B,MAAI;AACA,UAAMZ,MAAM,GAAG,MAAMX,IAAI,CAACmB,gBAAD,EAAmBI,MAAM,CAACR,IAA1B,CAAzB;AACA,UAAMH,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAN;AACA,UAAMZ,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEP,sBADA;AAENQ,MAAAA,IAAI,EAAEJ,MAAM,CAACI;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOC,CAAP,EAAU;AACRJ,IAAAA,OAAO,CAACK,KAAR,CAAcD,CAAd;AACA,UAAMjB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEU,sBADA;AAENP,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUS,kBAAV,GAA+B;AAC3B,QAAMxB,UAAU,CAACK,sBAAD,EAAyBgB,aAAzB,CAAhB;AACH;;AAED,eAAe,UAAUI,SAAV,GAAsB;AACjC,QAAM7B,GAAG,CAAC,CACNC,IAAI,CAACoB,kBAAD,CADE,EAENpB,IAAI,CAAC2B,kBAAD,CAFE,CAAD,CAAT;AAKH","sourcesContent":["import { all, fork, put, call, takeLatest } from 'redux-saga/effects'\r\nimport axios from 'axios'\r\nimport { LOAD_LABELLIST_REQUEST, LOAD_LABELLIST_SUCCESS, LOAD_LABELLIST_FAILURE, POST_LABELLIST_REQUEST, POST_LABELLIST_SUCCESS } from '../reducers/label';\r\n\r\nfunction loadLabelListAPI() {\r\n    return axios.get('/label/list');\r\n}\r\n\r\nfunction* loadLabelList() {\r\n    try {\r\n        const result = yield call(loadLabelListAPI);\r\n        yield console.log(result)\r\n        yield put({\r\n            type: LOAD_LABELLIST_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: LOAD_LABELLIST_FAILURE,\r\n            error: e,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLoadLabelList() {\r\n    yield takeLatest(LOAD_LABELLIST_REQUEST, loadLabelList)\r\n}\r\n\r\nfunction postLabelListAPI(label) {\r\n    return axios.post('/label/list', { label });\r\n}\r\n\r\nfunction* postLabelList(action) {\r\n    try {\r\n        const result = yield call(postLabelListAPI, action.data);\r\n        yield console.log(result)\r\n        yield put({\r\n            type: POST_LABELLIST_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: POST_LABELLIST_FAILURE,\r\n            error: e,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchPostLabelList() {\r\n    yield takeLatest(POST_LABELLIST_REQUEST, postLabelList)\r\n}\r\n\r\nexport default function* labelSaga() {\r\n    yield all([\r\n        fork(watchLoadLabelList),\r\n        fork(watchPostLabelList),\r\n\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}