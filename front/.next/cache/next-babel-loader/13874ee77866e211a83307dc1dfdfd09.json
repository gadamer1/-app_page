{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"D:\\\\webdev\\\\-app_page\\\\front\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport Head from 'next/head';\nimport rootSaga from '../sagas';\nimport reducer from '../reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport '../styles/style.scss';\n\nvar MapApp = function MapApp(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store,\n      pageProps = _ref.pageProps;\n  return __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })));\n};\n\nvar configureStore = function configureStore(initialState, options) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware.apply(void 0, middlewares)) : compose(applyMiddleware.apply(void 0, middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(MapApp));","map":{"version":3,"sources":["D:\\webdev\\-app_page\\front\\pages\\_app.js"],"names":["React","Provider","withRedux","withReduxSaga","Head","rootSaga","reducer","createSagaMiddleware","applyMiddleware","compose","createStore","MapApp","Component","store","pageProps","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","process","env","NODE_ENV","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","sagaTask","run"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAO,sBAAP;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAqC;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAChD,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI,MAAC,SAAD,eAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHJ,CADJ;AAOH,CARD;;AAUA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAAeC,OAAf,EAA2B;AAC9C,MAAMC,cAAc,GAAGX,oBAAoB,EAA3C;AACA,MAAMY,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,MAAME,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACXd,OAAO,CAACD,eAAe,MAAf,SAAmBW,WAAnB,CAAD,CADI,GAEXV,OAAO,CACLD,eAAe,MAAf,SAAmBW,WAAnB,CADK,EAEL,CAACF,OAAO,CAACO,QAAT,IAAqB,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WAApE,GAAkFD,MAAM,CAACC,4BAAP,EAAlF,GAA0H,UAAAC,CAAC;AAAA,WAAIA,CAAJ;AAAA,GAFtH,CAFb;AAMA,MAAMd,KAAK,GAAGH,WAAW,CAACJ,OAAD,EAAUU,YAAV,EAAwBI,QAAxB,CAAzB;AACAP,EAAAA,KAAK,CAACe,QAAN,GAAiBV,cAAc,CAACW,GAAf,CAAmBxB,QAAnB,CAAjB;AACA,SAAOQ,KAAP;AACH,CAZD;;AAcA,eAAeX,SAAS,CAACa,cAAD,CAAT,CAA0BZ,aAAa,CAACQ,MAAD,CAAvC,CAAf","sourcesContent":["import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport withRedux from 'next-redux-wrapper'\r\nimport withReduxSaga from 'next-redux-saga'\r\nimport Head from 'next/head'\r\nimport rootSaga from '../sagas'\r\nimport reducer from '../reducers'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { applyMiddleware, compose, createStore } from 'redux'\r\nimport '../styles/style.scss'\r\n\r\nconst MapApp = ({ Component, store, pageProps }) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Head>\r\n            </Head>\r\n            <Component {...pageProps} />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nconst configureStore = (initialState, options) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : compose(\r\n            applyMiddleware(...middlewares),\r\n            !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n        );\r\n    const store = createStore(reducer, initialState, enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\n\r\nexport default withRedux(configureStore)(withReduxSaga(MapApp));\r\n"]},"metadata":{},"sourceType":"module"}